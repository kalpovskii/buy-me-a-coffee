import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import abi from "../protocol/artifacts/contracts/BuyMeACoffee.sol/BuyMeACoffee.json";
import { useEffect, useState } from "react";
import { useContractWrite, useContractRead } from "wagmi";
import { parseEther } from "viem";
import { MemoComponent } from "../components/MemoComponent/index";

interface Memo {
  from: string;
  timestamp: number;
  name: string;
  message: string;
}

const CONTRACT_ADDRESS = "0x99f9065Ecc233581533183CA2D3165447ab82704";
const CONTRACT_ABI = abi.abi;

const Home: NextPage = () => {
  const [name, setName] = useState("");
  const [message, setMessage] = useState("");
  const [supplyData, setSupplyData] = useState<Memo[]>([]);

  const { isLoading, isError, isSuccess, write } = useContractWrite({
    address: CONTRACT_ADDRESS,
    abi: CONTRACT_ABI,
    functionName: "buyCoffee",
  });

  const { data } = useContractRead({
    address: CONTRACT_ADDRESS,
    abi: CONTRACT_ABI,
    functionName: "getMemos",
  });

  useEffect(() => {
    if (Array.isArray(data)) {
      setSupplyData(data);
    }
  }, [data]);

  const handleButtonClick = async (
    event: React.MouseEvent<HTMLButtonElement>
  ) => {
    event.preventDefault();
    try {
      const result = await write({
        args: [name, message],
        value: parseEther("0.001"),
      });
      return result;
    } catch (error) {
      throw new Error("Transaction failed");
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Buy me a coffee App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <form>
          <input
            aria-label="Name"
            onChange={(e) => setName(e.target.value)}
            placeholder="Anon"
            value={name}
          />
          <input
            aria-label="Message"
            onChange={(e) => setMessage(e.target.value)}
            placeholder="Enjoy your coffee!"
            value={message}
          />
          <button onClick={handleButtonClick}>Send 0.001 sETH</button>
        </form>
        {isError && <div>An error has occurred</div>}
        {isSuccess && <div>Transaction is succeed</div>}
        {isLoading && <div>Loading...</div>}
        <MemoComponent memos={supplyData} />
      </main>

      <footer className={styles.footer}>footer</footer>
    </div>
  );
};

export default Home;
